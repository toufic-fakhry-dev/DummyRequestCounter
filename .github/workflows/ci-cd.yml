name: CI/CD Pipeline

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  # --- 1. Linting / Code Quality ---
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Show repo (debug)
        run: |
          echo "Working directory:"
          pwd
          echo "Files:"
          ls -la
          echo "Tree (top 3 levels):"
          find . -maxdepth 3 -print

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install project deps + linters
        run: |
          python -m pip install --upgrade pip
          # Install your project deps if you have requirements.txt
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          pip install flake8==6.1.0 bandit==1.8.5

      - name: Flake8 â€” fail only for syntax / serious errors
        run: |
          # 1) Check for syntax / fatal errors (these should fail CI)
          flake8 . --select=E9,F63,F7,F82 --show-source --statistics

          # 2) Run style checks but don't fail CI on them (change --exit-zero to remove tolerance)
          flake8 . --exit-zero --max-complexity=10 --max-line-length=127 --statistics

      - name: Bandit (security scan, don't fail on findings)
        run: |
          bandit -r . || true

  # --- 2. Testing ---
  test:
    runs-on: ubuntu-latest
    services:
      redis:
        image: redis:7
        ports:
          - 6379:6379
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest
      - name: Run unit tests
        run: |
          PYTHONPATH=.:$PYTHONPATH pytest tests/ -v

  # --- 3. Build & Push Docker Image ---
  build-and-push:
    runs-on: ubuntu-latest
    needs: test
    permissions:
      contents: read
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Extract metadata (tags, labels)
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ secrets.DOCKER_USERNAME }}/dummy-request-counter
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=sha
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
