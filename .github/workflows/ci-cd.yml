name: CI/CD Pipeline

on:
  push:
    branches: [ tp2 ]
  pull_request:
    branches: [ tp2 ]

jobs:
  quality-test-build-push:
    runs-on: ubuntu-latest
    env:
      PYTHONPATH: ${{ github.workspace }}

    steps:
      # Step 1 - Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v4

      # Step 2 - Set up Python
      - name: Set up Python 3.11
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      # Step 3 - Install dependencies and tools
      - name: Install dependencies and tools
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install flake8 bandit pytest httpx

      # Step 4 - Debug: show working directory and test discovery
      - name: List test files and paths
        run: |
          echo "Current working directory: $(pwd)"
          echo "Python path: $PYTHONPATH"
          echo "Discovered tests:"
          ls -R tests || echo "No tests folder found"
          python - <<'PY'
          import sys, glob, os
          print("sys.path:", sys.path)
          print("Discovered test files:", glob.glob("tests/**/*.py", recursive=True))
          PY

      # Step 5 - Linting and security checks
      - name: Run lint and security checks (non-fatal)
        run: |
          echo "Running flake8 (code style)..."
          flake8 app tests || echo "flake8 warnings only, not breaking build"
          echo "Running Bandit (security scan)..."
          bandit -r app || echo "bandit warnings only, not breaking build"

      # Step 6 - Run unit tests
      - name: Run tests
        run: pytest -v tests/ --maxfail=1 --disable-warnings

      # Step 7 - Log in to Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Step 8 - Build and push Docker image
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/dummyrequestcounter:latest
