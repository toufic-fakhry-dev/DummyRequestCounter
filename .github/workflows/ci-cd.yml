name: CI/CD Pipeline

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  PYTHON_VERSION: "3.12"
  DOCKER_IMAGE: joeb0/dummyrequestcounter
  
jobs:
  # -------------------------------
  # 1. Lint + Sécurité
  # -------------------------------
  clean:
    name: Code Quality & Security
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Install lint tools
        run: |
          python -m pip install --upgrade pip
          pip install ruff bandit

      - name: Lint with Ruff
        run: ruff check .

      - name: Security scan with Bandit
        run: bandit -r . -q

  # -------------------------------
  # 2. Tests unitaires
  # -------------------------------
  test:
    name: Run Unit Tests
    runs-on: ubuntu-latest
    needs: clean
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run pytest
        run: pytest -v

  # -------------------------------
  # 3. Build Docker image
  # -------------------------------
  build:
    name: Build Docker Image
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up QEMU (multi-arch build)
        uses: docker/setup-qemu-action@v3

      - name: Set up Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Docker image (test only)
        uses: docker/build-push-action@v6
        with:
          context: .
          push: false
          tags: ${{ env.DOCKER_IMAGE }}:ci-test

  # -------------------------------
  # 4. Push image to Docker Hub
  # -------------------------------
  push:
    name: Push to Docker Hub
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: |
            ${{ env.DOCKER_IMAGE }}:latest
            ${{ env.DOCKER_IMAGE }}:${{ github.sha }}