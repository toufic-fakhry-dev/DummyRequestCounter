name: CI/CD Pipeline

on:
  push:
    branches: [ main, feature/docker-setup ]
  pull_request:
    branches: [ main ]

env:
  IMAGE_NAME: dummyrequestcounter
  PYTHON_VERSION: '3.10'

jobs:
  # ---------------------- CI: Code Quality & Tests ----------------------
  ci:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest flake8 bandit

      - name: Linting (flake8)
        run: |
          echo "Running code linting..."
          flake8 app/ --max-line-length=100

      - name: Security check (bandit)
        run: |
          echo "Running vulnerability scan..."
          bandit -r app/ || true

      - name: Run tests
        run: |
          echo "Running unit tests..."
          pytest tests/ -v

  # ---------------------- CD: Docker Build & Push ----------------------
  cd:
    runs-on: ubuntu-latest
    needs: ci
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build Docker image
        run: |
          docker build -t ${{ env.IMAGE_NAME }} .

      - name: Tag Docker image
        run: |
          docker tag ${{ env.IMAGE_NAME }} ${{ secrets.DOCKER_USERNAME }}/${{ env.IMAGE_NAME }}:latest

      - name: Push Docker image to Docker Hub
        run: |
          docker push ${{ secrets.DOCKER_USERNAME }}/${{ env.IMAGE_NAME }}:latest
