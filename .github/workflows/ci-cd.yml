name: CI / CD

on:
  push:
    branches: [ "*" ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

env:
  APP_DIR: DummyRequestCounter

jobs:
  # Linting 
  lint:
    name: Lint (flake8)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r ${{ env.APP_DIR }}/requirements.txt
          pip install flake8

      - name: Run flake8
        run: |
          flake8 ${{ env.APP_DIR }}

  # Security Scan 
  security-scan:
    name: Security (bandit)
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Install bandit
        run: |
          python -m pip install --upgrade pip
          pip install -r ${{ env.APP_DIR }}/requirements.txt
          pip install bandit

      - name: Run bandit
        run: |
          bandit -r ${{ env.APP_DIR }} -x "${{ env.APP_DIR }}/.venv"

  # Testing 
  tests:
    name: Tests (pytest)
    runs-on: ubuntu-latest
    needs: [lint, security-scan]
    strategy:
      matrix:
        python-version: [3.10, 3.11]

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r ${{ env.APP_DIR }}/requirements.txt
          pip install pytest pytest-mock

      - name: Run tests
        working-directory: ${{ env.APP_DIR }}
        run: |
          python -m pytest tests/ -v

  # Build & Push Docker Image 
  build-and-push:
    name: Build Docker image & push to Docker Hub
    runs-on: ubuntu-latest
    needs: tests

    steps:
      - uses: actions/checkout@v4

      - name: Set up QEMU (multi-arch)
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push image
        working-directory: ${{ env.APP_DIR }}
        uses: docker/build-push-action@v5
        with:
          context: .
          file: Dockerfile
          push: true
          tags: |
            ${{ secrets.DOCKER_USERNAME }}/dummyrequestcounter:${{ github.ref_name }}
            ${{ secrets.DOCKER_USERNAME }}/dummyrequestcounter:latest

  # Deployment
  deploy:
    name: Verify DockerHub push
    runs-on: ubuntu-latest
    needs: build-and-push

    steps:
      - name: Confirm image availability
        run: |
          echo "Docker image successfully pushed to Docker Hub!"
          echo "https://hub.docker.com/r/${{ secrets.DOCKER_USERNAME }}/dummyrequestcounter"
          echo "Tag used: ${{ github.ref_name }}"
