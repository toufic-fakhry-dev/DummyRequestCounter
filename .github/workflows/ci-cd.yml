name: CI/CD Pipeline

on:
  push:
    branches: [ main, new-branch ]
  pull_request:
    branches: [ main, new-branch ]

jobs:
 
  code-quality:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"
      - name: Install dependencies
        run: |
          pip install -r requirements.txt
          pip install flake8 bandit
      - name: Lint code
        run: flake8 .
      - name: Vulnerability scan
        run: bandit -r .

  
  test:
    runs-on: ubuntu-latest
    needs: code-quality
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"
      - name: Install dependencies
        run: pip install -r requirements.txt
      - name: Run tests
        run: python -m pytest tests/ -v

  
  docker-build-test:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - uses: actions/checkout@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build Docker image
        run: docker build -t ${{ secrets.DOCKER_USERNAME }}/multicontainer2:latest .

      - name: Test Docker container
        run: |
          docker run --rm \
            -e REDIS_HOST=redis \
            -e REDIS_PORT=6379 \
            ${{ secrets.DOCKER_USERNAME }}/multicontainer2:latest python -m pytest tests/ -v

      - name: Save image as artifact
        run: docker save ${{ secrets.DOCKER_USERNAME }}/multicontainer2:latest | gzip > image.tar.gz

      - name: Upload image artifact
        uses: actions/upload-artifact@v4
        with:
          name: docker-image
          path: image.tar.gz

 
  push-to-dockerhub:
    runs-on: ubuntu-latest
    needs: [docker-build-test]
    steps:
      - uses: actions/checkout@v3

      - name: Download Docker image artifact
        uses: actions/download-artifact@v4
        with:
          name: docker-image
          path: .

      - name: Load Docker image
        run: docker load < image.tar.gz

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Tag and push image
        run: |
          docker tag ${{ secrets.DOCKER_USERNAME }}/multicontainer2:latest \
            ${{ secrets.DOCKER_USERNAME }}/multicontainer2:${{ github.run_number }}
          docker push ${{ secrets.DOCKER_USERNAME }}/multicontainer2:latest
          docker push ${{ secrets.DOCKER_USERNAME }}/multicontainer2:${{ github.run_number }}
